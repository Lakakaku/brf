version: '3.8'

services:
  # Main Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: brf-portal-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/database/brf_portal.db
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    volumes:
      # Database persistence
      - ./database:/app/database
      # Development hot reload (comment out for production)
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - redis
    networks:
      - brf-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: brf-portal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brf-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for production (comment out if using SQLite)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: brf-portal-postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_DB=brf_portal
  #     - POSTGRES_USER=brf_user
  #     - POSTGRES_PASSWORD=brf_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - brf-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U brf_user -d brf_portal"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Optional: Nginx reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: brf-portal-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/ssl/certs
  #   depends_on:
  #     - app
  #   networks:
  #     - brf-network
  #   restart: unless-stopped

volumes:
  redis_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  brf-network:
    driver: bridge